{"version":3,"file":"admin.js","sources":["../src/admin/index.tsx"],"sourcesContent":["import app from 'flarum/admin/app';\r\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport type { SlideData, ExtensionSettings } from '../common/types';\r\n\r\n/**\r\n * Extension configuration constants\r\n */\r\nconst EXTENSION_ID = 'wusong8899-client1-header-adv';\r\nconst SOCIAL_PLATFORMS = ['Kick', 'Facebook', 'Twitter', 'YouTube', 'Instagram'] as const;\r\nconst _DEFAULT_MAX_SLIDES = 30;\r\n\r\n/**\r\n * Unified Admin Management Component\r\n * Consolidates slideshow management, social media settings, and global configuration\r\n */\r\nclass UnifiedAdminComponent extends ExtensionPage {\r\n  // Stream instances for reactive form handling\r\n  transitionTimeStream: Stream<number>;\r\n  tagGlideTitleStream: Stream<string>;\r\n  tagGlideTitleIconStream: Stream<string>;\r\n  headerIconUrlStream: Stream<string>;\r\n  headerIconLinkStream: Stream<string>;\r\n  \r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    \r\n    // Initialize settings using ExtensionPage's setting method\r\n    if (!this.setting(`${EXTENSION_ID}.settings`)()) {\r\n      // Set empty JSON if no settings exist\r\n      this.setting(`${EXTENSION_ID}.settings`)('{}');\r\n    }\r\n    \r\n    // Add default data if no slides exist (for testing)\r\n    const settings = this.getSettings();\r\n    if (settings.slides.length === 0) {\r\n      this.addDefaultSlides();\r\n    }\r\n    \r\n    // Initialize streams with current settings\r\n    this.initializeStreams();\r\n  }\r\n  \r\n  /**\r\n   * Get settings from ExtensionPage's setting method\r\n   */\r\n  getSettings(): ExtensionSettings {\r\n    try {\r\n      const json = this.setting(`${EXTENSION_ID}.settings`)() || '{}';\r\n      const parsed = JSON.parse(json);\r\n      return {\r\n        slides: parsed.slides || [],\r\n        transitionTime: parsed.transitionTime || 5000,\r\n        socialLinks: parsed.socialLinks || [],\r\n        headerIcon: parsed.headerIcon || { url: '', link: '' },\r\n        tagGlideTitle: parsed.tagGlideTitle || '',\r\n        tagGlideTitleIcon: parsed.tagGlideTitleIcon || ''\r\n      };\r\n    } catch (error) {\r\n      console.error('Failed to parse settings JSON:', error);\r\n      return {\r\n        slides: [],\r\n        transitionTime: 5000,\r\n        socialLinks: [],\r\n        headerIcon: { url: '', link: '' },\r\n        tagGlideTitle: '',\r\n        tagGlideTitleIcon: ''\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Initialize reactive streams with current settings\r\n   */\r\n  initializeStreams(): void {\r\n    const settings = this.getSettings();\r\n    \r\n    // Initialize streams with current values\r\n    this.transitionTimeStream = Stream(settings.transitionTime);\r\n    this.tagGlideTitleStream = Stream(settings.tagGlideTitle || '');\r\n    this.tagGlideTitleIconStream = Stream(settings.tagGlideTitleIcon || '');\r\n    this.headerIconUrlStream = Stream(settings.headerIcon?.url || '');\r\n    this.headerIconLinkStream = Stream(settings.headerIcon?.link || '');\r\n    \r\n    // Set up auto-save listeners\r\n    this.transitionTimeStream.map((value: number) => {\r\n      const currentSettings = this.getSettings();\r\n      currentSettings.transitionTime = value;\r\n      this.updateSettings(currentSettings);\r\n    });\r\n    \r\n    this.tagGlideTitleStream.map((value: string) => {\r\n      const currentSettings = this.getSettings();\r\n      currentSettings.tagGlideTitle = value;\r\n      this.updateSettings(currentSettings);\r\n    });\r\n    \r\n    this.tagGlideTitleIconStream.map((value: string) => {\r\n      const currentSettings = this.getSettings();\r\n      currentSettings.tagGlideTitleIcon = value;\r\n      this.updateSettings(currentSettings);\r\n    });\r\n    \r\n    this.headerIconUrlStream.map((value: string) => {\r\n      this.updateHeaderIcon('url', value);\r\n    });\r\n    \r\n    this.headerIconLinkStream.map((value: string) => {\r\n      this.updateHeaderIcon('link', value);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Update settings using ExtensionPage's setting method\r\n   */\r\n  updateSettings(settings: ExtensionSettings): void {\r\n    try {\r\n      const json = JSON.stringify(settings);\r\n      this.setting(`${EXTENSION_ID}.settings`)(json);\r\n    } catch (error) {\r\n      console.error('Failed to save settings:', error);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Add some default slides for testing purposes\r\n   */\r\n  addDefaultSlides(): void {\r\n    \r\n    const settings = this.getSettings();\r\n    settings.slides = [\r\n      {\r\n        id: 'slide-default-1',\r\n        image: 'https://via.placeholder.com/800x400/FF6B6B/FFFFFF?text=Advertisement+1',\r\n        link: 'https://example.com/ad1',\r\n        active: true,\r\n        order: 1\r\n      },\r\n      {\r\n        id: 'slide-default-2', \r\n        image: 'https://via.placeholder.com/800x400/4ECDC4/FFFFFF?text=Advertisement+2',\r\n        link: 'https://example.com/ad2',\r\n        active: true,\r\n        order: 2\r\n      }\r\n    ];\r\n    \r\n    this.updateSettings(settings);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Add new slide\r\n   */\r\n  addSlide(): void {\r\n    const settings = this.getSettings();\r\n    const newSlide: SlideData = {\r\n      id: `slide-${Date.now()}`,\r\n      image: '',\r\n      link: '',\r\n      active: true,\r\n      order: settings.slides.length + 1\r\n    };\r\n    \r\n    settings.slides.push(newSlide);\r\n    this.updateSettings(settings);\r\n  }\r\n\r\n  /**\r\n   * Delete slide\r\n   */\r\n  deleteSlide(slideId: string): void {\r\n    const settings = this.getSettings();\r\n    settings.slides = settings.slides.filter(slide => slide.id !== slideId);\r\n    // Reorder remaining slides\r\n    settings.slides.forEach((slide, index) => {\r\n      slide.order = index + 1;\r\n    });\r\n    this.updateSettings(settings);\r\n  }\r\n\r\n  /**\r\n   * Update slide\r\n   */\r\n  updateSlide(slideId: string, field: keyof SlideData, value: any): void {\r\n    const settings = this.getSettings();\r\n    const slide = settings.slides.find(s => s.id === slideId);\r\n    if (slide) {\r\n      (slide as any)[field] = value;\r\n      this.updateSettings(settings);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update social media link\r\n   */\r\n  updateSocialLink(platform: string, field: 'url' | 'icon', value: string): void {\r\n    const settings = this.getSettings();\r\n    let socialLink = settings.socialLinks.find(s => s.platform === platform);\r\n    if (!socialLink) {\r\n      socialLink = { platform, url: '', icon: '' };\r\n      settings.socialLinks.push(socialLink);\r\n    }\r\n    socialLink[field] = value;\r\n    this.updateSettings(settings);\r\n  }\r\n\r\n  /**\r\n   * Update header icon configuration\r\n   */\r\n  updateHeaderIcon(field: 'url' | 'link', value: string): void {\r\n    const settings = this.getSettings();\r\n    if (!settings.headerIcon) {\r\n      settings.headerIcon = { url: '', link: '' };\r\n    }\r\n    settings.headerIcon[field] = value;\r\n    this.updateSettings(settings);\r\n  }\r\n\r\n  content() {\r\n    const settings = this.getSettings(); // Get current settings on each render\r\n    \r\n    return (\r\n      <div className=\"ExtensionPage-settings\">\r\n        <div className=\"container\">\r\n          <div className=\"UnifiedAdminComponent\">\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.GlobalSettings')}</h3>\r\n          \r\n          <label className=\"FormLabel\">\r\n            {app.translator.trans('wusong8899-client1.admin.TransitionTime')}\r\n          </label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"number\"\r\n            min=\"1000\"\r\n            max=\"30000\"\r\n            bidi={this.transitionTimeStream}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.TagGlideTitle')}</h3>\r\n          \r\n          <label className=\"FormLabel\">\r\n            {app.translator.trans('wusong8899-client1.admin.TagGlideTitleLabel')}\r\n          </label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"text\"\r\n            placeholder={app.translator.trans('wusong8899-client1.admin.TagGlideTitlePlaceholder')}\r\n            bidi={this.tagGlideTitleStream}\r\n          />\r\n          <div className=\"helpText\">\r\n            {app.translator.trans('wusong8899-client1.admin.TagGlideTitleHelp')}\r\n          </div>\r\n          \r\n          <label className=\"FormLabel\">\r\n            {app.translator.trans('wusong8899-client1.admin.TagGlideTitleIconLabel')}\r\n          </label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            placeholder={app.translator.trans('wusong8899-client1.admin.TagGlideTitleIconPlaceholder')}\r\n            bidi={this.tagGlideTitleIconStream}\r\n          />\r\n          <div className=\"helpText\">\r\n            {app.translator.trans('wusong8899-client1.admin.TagGlideTitleIconHelp')}\r\n          </div>\r\n          \r\n          {this.tagGlideTitleIconStream() && (\r\n            <div className=\"IconPreview\">\r\n              <img \r\n                src={this.tagGlideTitleIconStream()} \r\n                alt=\"Tag title icon preview\" \r\n                style=\"max-width: 18px; max-height: 18px; margin-top: 5px;\" \r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.HeaderIconTitle')}</h3>\r\n          \r\n          <label className=\"FormLabel\">\r\n            {app.translator.trans('wusong8899-client1.admin.HeaderIconUrl')}\r\n          </label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            placeholder={app.translator.trans('wusong8899-client1.admin.HeaderIconUrlHelp')}\r\n            bidi={this.headerIconUrlStream}\r\n          />\r\n          \r\n          <label className=\"FormLabel\">\r\n            {app.translator.trans('wusong8899-client1.admin.HeaderIconLink')}\r\n          </label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            placeholder={app.translator.trans('wusong8899-client1.admin.HeaderIconLinkHelp')}\r\n            bidi={this.headerIconLinkStream}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.SlidesManagement')}</h3>\r\n          \r\n          {settings.slides.map((slide) => this.renderSlide(slide))}\r\n          \r\n          <button className=\"Button Button--primary\" onclick={() => this.addSlide()}>\r\n            {app.translator.trans('wusong8899-client1.admin.AddSlide')}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.SocialMediaTitle')}</h3>\r\n          \r\n          {SOCIAL_PLATFORMS.map((platform) => this.renderSocialPlatform(platform))}\r\n        </div>\r\n        \r\n        {/* Submit button handled by ExtensionPage */}\r\n        <div className=\"Form-group\">\r\n          {this.submitButton()}\r\n        </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render slide configuration\r\n   */\r\n  renderSlide(slide: SlideData) {\r\n    return (\r\n      <div className=\"SlideConfig\" key={slide.id}>\r\n        <div className=\"SlideConfig-header\">\r\n          <h4>Slide {slide.order}</h4>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={slide.active}\r\n            onchange={(e: Event) => {\r\n              this.updateSlide(slide.id, 'active', (e.target as HTMLInputElement).checked);\r\n            }}\r\n          />\r\n          <button \r\n            className=\"Button Button--danger\" \r\n            onclick={() => this.deleteSlide(slide.id)}\r\n          >\r\n            {app.translator.trans('wusong8899-client1.admin.DeleteButton')}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">{app.translator.trans('wusong8899-client1.admin.SlideImageLabel')}</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            value={slide.image}\r\n            oninput={(e: Event) => {\r\n              this.updateSlide(slide.id, 'image', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">{app.translator.trans('wusong8899-client1.admin.SlideLinkLabel')}</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            value={slide.link}\r\n            oninput={(e: Event) => {\r\n              this.updateSlide(slide.id, 'link', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render social platform configuration\r\n   */\r\n  renderSocialPlatform(platform: string) {\r\n    const settings = this.getSettings();\r\n    const socialLink = settings.socialLinks.find(s => s.platform === platform) || \r\n                      { platform, url: '', icon: '' };\r\n\r\n    return (\r\n      <div className=\"SocialPlatformConfig\" key={platform}>\r\n        <h4>{platform}</h4>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">URL</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            placeholder={`https://${platform.toLowerCase()}.com/yourprofile`}\r\n            value={socialLink.url}\r\n            oninput={(e: Event) => {\r\n              this.updateSocialLink(platform, 'url', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">Icon URL</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            placeholder=\"https://example.com/icon.png\"\r\n            value={socialLink.icon}\r\n            oninput={(e: Event) => {\r\n              this.updateSocialLink(platform, 'icon', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n          \r\n          {socialLink.icon && (\r\n            <div className=\"IconPreview\">\r\n              <img src={socialLink.icon} alt={`${platform} icon`} style=\"max-width: 32px; max-height: 32px;\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize the unified admin interface\r\n */\r\napp.initializers.add(EXTENSION_ID, (): void => {\r\n  const extensionData = app.extensionData.for(EXTENSION_ID);\r\n\r\n  // Register the main JSON settings\r\n  extensionData.registerSetting({\r\n    setting: `${EXTENSION_ID}.settings`,\r\n    type: 'text',\r\n    label: '',\r\n    hidden: true, // This will be handled by our custom component\r\n  });\r\n\r\n\r\n  // Register the custom page instead of just a setting component\r\n  extensionData.registerPage(UnifiedAdminComponent);\r\n});"],"names":["EXTENSION_ID","SOCIAL_PLATFORMS","UnifiedAdminComponent","ExtensionPage","vnode","json","parsed","error","settings","Stream","value","currentSettings","newSlide","slideId","slide","index","field","s","platform","socialLink","app","e","extensionData"],"mappings":"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"}