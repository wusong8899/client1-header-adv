{"version":3,"file":"admin.js","sources":["../src/admin/index.tsx"],"sourcesContent":["import app from 'flarum/admin/app';\r\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\n\r\n/**\r\n * Extension configuration constants\r\n */\r\nconst EXTENSION_ID = 'wusong8899-client1-header-adv';\r\nconst SOCIAL_PLATFORMS = ['Kick', 'Facebook', 'Twitter', 'YouTube', 'Instagram'] as const;\r\nconst DEFAULT_MAX_SLIDES = 30;\r\n\r\n/**\r\n * Simplified slide data structure\r\n */\r\ninterface SlideData {\r\n  id: string;\r\n  image: string;\r\n  link: string;\r\n  active: boolean;\r\n  order: number;\r\n}\r\n\r\n/**\r\n * Social media link structure\r\n */\r\ninterface SocialLink {\r\n  platform: string;\r\n  url: string;\r\n  icon: string;\r\n}\r\n\r\n/**\r\n * Extension settings structure\r\n */\r\ninterface ExtensionSettings {\r\n  slides: SlideData[];\r\n  transitionTime: number;\r\n  socialLinks: SocialLink[];\r\n}\r\n\r\n/**\r\n * Unified Admin Management Component\r\n * Consolidates slideshow management, social media settings, and global configuration\r\n */\r\nclass UnifiedAdminComponent extends ExtensionPage {\r\n  private settings: ExtensionSettings = {\r\n    slides: [],\r\n    transitionTime: 5000,\r\n    socialLinks: []\r\n  };\r\n\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    \r\n    this.loadSettings();\r\n    // Add default data if no slides exist (for testing)\r\n    if (this.settings.slides.length === 0) {\r\n      this.addDefaultSlides();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add some default slides for testing purposes\r\n   */\r\n  addDefaultSlides(): void {\r\n    console.log('Adding default test slides...');\r\n    \r\n    this.settings.slides = [\r\n      {\r\n        id: 'slide-default-1',\r\n        image: 'https://via.placeholder.com/800x400/FF6B6B/FFFFFF?text=Advertisement+1',\r\n        link: 'https://example.com/ad1',\r\n        active: true,\r\n        order: 1\r\n      },\r\n      {\r\n        id: 'slide-default-2', \r\n        image: 'https://via.placeholder.com/800x400/4ECDC4/FFFFFF?text=Advertisement+2',\r\n        link: 'https://example.com/ad2',\r\n        active: true,\r\n        order: 2\r\n      }\r\n    ];\r\n    \r\n    this.saveSettings();\r\n    console.log('Default slides added:', this.settings.slides);\r\n  }\r\n\r\n  /**\r\n   * Load all settings from Flarum\r\n   */\r\n  loadSettings(): void {\r\n    try {\r\n      console.log('Admin: Loading settings...');\r\n      const settingsJson = app.data.settings[`${EXTENSION_ID}.settings`];\r\n      console.log('Admin: JSON settings found:', settingsJson ? 'yes' : 'no');\r\n      \r\n      if (settingsJson) {\r\n        this.settings = JSON.parse(settingsJson);\r\n        console.log('Admin: Loaded JSON settings:', this.settings);\r\n      } else {\r\n        console.log('Admin: Falling back to legacy settings');\r\n        // Load from legacy format if JSON doesn't exist\r\n        this.loadLegacySettings();\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load settings:', error);\r\n      console.log('Admin: Falling back to legacy settings due to error');\r\n      this.loadLegacySettings();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load settings from legacy individual keys\r\n   */\r\n  loadLegacySettings(): void {\r\n    const slides: SlideData[] = [];\r\n    const socialLinks: SocialLink[] = [];\r\n\r\n    // Load slides from legacy format\r\n    for (let i = 1; i <= DEFAULT_MAX_SLIDES; i++) {\r\n      const link = app.data.settings[`${EXTENSION_ID}.Link${i}`] || '';\r\n      const image = app.data.settings[`${EXTENSION_ID}.Image${i}`] || '';\r\n      \r\n      if (link || image) {\r\n        slides.push({\r\n          id: `slide-${i}`,\r\n          image,\r\n          link,\r\n          active: true,\r\n          order: i\r\n        });\r\n      }\r\n    }\r\n\r\n    // Load social media links from legacy format\r\n    SOCIAL_PLATFORMS.forEach((platform) => {\r\n      const url = app.data.settings[`${EXTENSION_ID}.Social${platform}Url`] || '';\r\n      const icon = app.data.settings[`${EXTENSION_ID}.Social${platform}Icon`] || '';\r\n      \r\n      socialLinks.push({\r\n        platform,\r\n        url,\r\n        icon\r\n      });\r\n    });\r\n\r\n    this.settings = {\r\n      slides,\r\n      transitionTime: parseInt(app.data.settings[`${EXTENSION_ID}.TransitionTime`]) || 5000,\r\n      socialLinks\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Save all settings using ExtensionPage's built-in method\r\n   */\r\n  saveSettings(): void {\r\n    const settingsJson = JSON.stringify(this.settings);\r\n    console.log('Admin: Saving settings using ExtensionPage method:', settingsJson);\r\n    \r\n    // Use ExtensionPage's setting method for proper save handling\r\n    this.setting(`${EXTENSION_ID}.settings`)(settingsJson);\r\n    this.setting(`${EXTENSION_ID}.TransitionTime`)(this.settings.transitionTime.toString());\r\n    \r\n    console.log('Admin: Settings updated via ExtensionPage.setting()');\r\n    \r\n    // Force redraw to update UI\r\n    m.redraw();\r\n  }\r\n\r\n  /**\r\n   * Add new slide\r\n   */\r\n  addSlide(): void {\r\n    const newSlide: SlideData = {\r\n      id: `slide-${Date.now()}`,\r\n      image: '',\r\n      link: '',\r\n      active: true,\r\n      order: this.settings.slides.length + 1\r\n    };\r\n    \r\n    this.settings.slides.push(newSlide);\r\n    this.saveSettings();\r\n  }\r\n\r\n  /**\r\n   * Delete slide\r\n   */\r\n  deleteSlide(slideId: string): void {\r\n    this.settings.slides = this.settings.slides.filter(slide => slide.id !== slideId);\r\n    // Reorder remaining slides\r\n    this.settings.slides.forEach((slide, index) => {\r\n      slide.order = index + 1;\r\n    });\r\n    this.saveSettings();\r\n  }\r\n\r\n  /**\r\n   * Update slide\r\n   */\r\n  updateSlide(slideId: string, field: keyof SlideData, value: any): void {\r\n    const slide = this.settings.slides.find(s => s.id === slideId);\r\n    if (slide) {\r\n      (slide as any)[field] = value;\r\n      this.saveSettings();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update social media link\r\n   */\r\n  updateSocialLink(platform: string, field: 'url' | 'icon', value: string): void {\r\n    let socialLink = this.settings.socialLinks.find(s => s.platform === platform);\r\n    if (!socialLink) {\r\n      socialLink = { platform, url: '', icon: '' };\r\n      this.settings.socialLinks.push(socialLink);\r\n    }\r\n    socialLink[field] = value;\r\n    this.saveSettings();\r\n  }\r\n\r\n  content() {\r\n    return (\r\n      <div className=\"ExtensionPage-settings\">\r\n        <div className=\"container\">\r\n          <div className=\"UnifiedAdminComponent\">\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.GlobalSettings')}</h3>\r\n          \r\n          <label className=\"FormLabel\">\r\n            {app.translator.trans('wusong8899-client1.admin.TransitionTime')}\r\n          </label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"number\"\r\n            min=\"1000\"\r\n            max=\"30000\"\r\n            value={this.settings.transitionTime}\r\n            oninput={(e: Event) => {\r\n              this.settings.transitionTime = parseInt((e.target as HTMLInputElement).value);\r\n              this.saveSettings();\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.SlidesManagement')}</h3>\r\n          \r\n          {this.settings.slides.map((slide) => this.renderSlide(slide))}\r\n          \r\n          <button className=\"Button Button--primary\" onclick={() => this.addSlide()}>\r\n            {app.translator.trans('wusong8899-client1.admin.AddSlide')}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.SocialMediaTitle')}</h3>\r\n          \r\n          {SOCIAL_PLATFORMS.map((platform) => this.renderSocialPlatform(platform))}\r\n        </div>\r\n        \r\n        {/* Submit button handled by ExtensionPage */}\r\n        <div className=\"Form-group\">\r\n          {this.submitButton()}\r\n        </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render slide configuration\r\n   */\r\n  renderSlide(slide: SlideData) {\r\n    return (\r\n      <div className=\"SlideConfig\" key={slide.id}>\r\n        <div className=\"SlideConfig-header\">\r\n          <h4>Slide {slide.order}</h4>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={slide.active}\r\n            onchange={(e: Event) => {\r\n              this.updateSlide(slide.id, 'active', (e.target as HTMLInputElement).checked);\r\n            }}\r\n          />\r\n          <button \r\n            className=\"Button Button--danger\" \r\n            onclick={() => this.deleteSlide(slide.id)}\r\n          >\r\n            {app.translator.trans('wusong8899-client1.admin.DeleteButton')}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">{app.translator.trans('wusong8899-client1.admin.SlideImageLabel')}</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            value={slide.image}\r\n            oninput={(e: Event) => {\r\n              this.updateSlide(slide.id, 'image', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">{app.translator.trans('wusong8899-client1.admin.SlideLinkLabel')}</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            value={slide.link}\r\n            oninput={(e: Event) => {\r\n              this.updateSlide(slide.id, 'link', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render social platform configuration\r\n   */\r\n  renderSocialPlatform(platform: string) {\r\n    const socialLink = this.settings.socialLinks.find(s => s.platform === platform) || \r\n                      { platform, url: '', icon: '' };\r\n\r\n    return (\r\n      <div className=\"SocialPlatformConfig\" key={platform}>\r\n        <h4>{platform}</h4>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">URL</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            placeholder={`https://${platform.toLowerCase()}.com/yourprofile`}\r\n            value={socialLink.url}\r\n            oninput={(e: Event) => {\r\n              this.updateSocialLink(platform, 'url', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">Icon URL</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            placeholder=\"https://example.com/icon.png\"\r\n            value={socialLink.icon}\r\n            oninput={(e: Event) => {\r\n              this.updateSocialLink(platform, 'icon', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n          \r\n          {socialLink.icon && (\r\n            <div className=\"IconPreview\">\r\n              <img src={socialLink.icon} alt={`${platform} icon`} style=\"max-width: 32px; max-height: 32px;\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize the unified admin interface\r\n */\r\napp.initializers.add(EXTENSION_ID, (): void => {\r\n  const extensionData = app.extensionData.for(EXTENSION_ID);\r\n\r\n  // Register the main JSON settings\r\n  extensionData.registerSetting({\r\n    setting: `${EXTENSION_ID}.settings`,\r\n    type: 'text',\r\n    label: '',\r\n    hidden: true, // This will be handled by our custom component\r\n  });\r\n\r\n  // Register legacy transition time setting for backward compatibility\r\n  extensionData.registerSetting({\r\n    setting: `${EXTENSION_ID}.TransitionTime`,\r\n    type: 'number',\r\n    label: '',\r\n    hidden: true, // This will be handled by our custom component\r\n  });\r\n\r\n  // Register the custom page instead of just a setting component\r\n  extensionData.registerPage(UnifiedAdminComponent);\r\n});"],"names":["EXTENSION_ID","SOCIAL_PLATFORMS","UnifiedAdminComponent","ExtensionPage","vnode","settingsJson","app","error","slides","socialLinks","i","link","image","platform","url","icon","newSlide","slideId","slide","index","field","value","s","socialLink","e","extensionData"],"mappings":"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"}