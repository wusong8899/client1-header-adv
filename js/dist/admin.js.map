{"version":3,"file":"admin.js","sources":["../src/admin/index.tsx"],"sourcesContent":["import app from 'flarum/admin/app';\r\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\nimport type { SlideData, ExtensionSettings } from '../common/types';\r\n\r\n/**\r\n * Extension configuration constants\r\n */\r\nconst EXTENSION_ID = 'wusong8899-client1-header-adv';\r\nconst SOCIAL_PLATFORMS = ['Kick', 'Facebook', 'Twitter', 'YouTube', 'Instagram'] as const;\r\nconst _DEFAULT_MAX_SLIDES = 30;\r\n\r\n/**\r\n * Unified Admin Management Component\r\n * Consolidates slideshow management, social media settings, and global configuration\r\n */\r\nclass UnifiedAdminComponent extends ExtensionPage {\r\n  \r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    \r\n    // Initialize settings using ExtensionPage's setting method\r\n    if (!this.setting(`${EXTENSION_ID}.settings`)()) {\r\n      // Check for legacy data migration first\r\n      this.migrateFromLegacy();\r\n    }\r\n    \r\n    // Add default data if no slides exist (for testing)\r\n    const settings = this.getSettings();\r\n    if (settings.slides.length === 0) {\r\n      this.addDefaultSlides();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get settings from ExtensionPage's setting method\r\n   */\r\n  getSettings(): ExtensionSettings {\r\n    try {\r\n      const json = this.setting(`${EXTENSION_ID}.settings`)() || '{}';\r\n      const parsed = JSON.parse(json);\r\n      return {\r\n        slides: parsed.slides || [],\r\n        transitionTime: parsed.transitionTime || 5000,\r\n        socialLinks: parsed.socialLinks || [],\r\n        headerIcon: parsed.headerIcon || {\r\n          url: app.data.settings[`${EXTENSION_ID}.headerIconUrl`] || '',\r\n          link: app.data.settings[`${EXTENSION_ID}.headerIconLink`] || ''\r\n        },\r\n        tagGlideTitle: parsed.tagGlideTitle || ''\r\n      };\r\n    } catch (error) {\r\n      console.error('Failed to parse settings JSON:', error);\r\n      return {\r\n        slides: [],\r\n        transitionTime: 5000,\r\n        socialLinks: [],\r\n        headerIcon: {\r\n          url: app.data.settings[`${EXTENSION_ID}.headerIconUrl`] || '',\r\n          link: app.data.settings[`${EXTENSION_ID}.headerIconLink`] || ''\r\n        },\r\n        tagGlideTitle: ''\r\n      };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update settings using ExtensionPage's setting method\r\n   */\r\n  updateSettings(settings: ExtensionSettings): void {\r\n    try {\r\n      const json = JSON.stringify(settings);\r\n      this.setting(`${EXTENSION_ID}.settings`)(json);\r\n      // Also update transition time in separate setting for legacy compatibility\r\n      this.setting(`${EXTENSION_ID}.TransitionTime`)(settings.transitionTime.toString());\r\n      \r\n      // Update headerIcon settings individually for forum access\r\n      if (settings.headerIcon) {\r\n        this.setting(`${EXTENSION_ID}.headerIconUrl`)(settings.headerIcon.url || '');\r\n        this.setting(`${EXTENSION_ID}.headerIconLink`)(settings.headerIcon.link || '');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to save settings:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Migrate from legacy individual settings to JSON format\r\n   */\r\n  migrateFromLegacy(): void {\r\n    \r\n    const settings: ExtensionSettings = {\r\n      slides: [],\r\n      transitionTime: parseInt(app.data.settings[`${EXTENSION_ID}.TransitionTime`]) || 5000,\r\n      socialLinks: [],\r\n      headerIcon: {\r\n        url: app.data.settings[`${EXTENSION_ID}.headerIconUrl`] || '',\r\n        link: app.data.settings[`${EXTENSION_ID}.headerIconLink`] || ''\r\n      }\r\n    };\r\n    \r\n    // Migrate old slideshow data (up to 30 slides)\r\n    for (let i = 1; i <= 30; i++) {\r\n      const image = app.data.settings[`${EXTENSION_ID}.Image${i}`];\r\n      const link = app.data.settings[`${EXTENSION_ID}.Link${i}`];\r\n      if (image || link) {\r\n        settings.slides.push({\r\n          id: `legacy-${i}`,\r\n          image: image || '',\r\n          link: link || '',\r\n          active: true,\r\n          order: i\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Migrate social media links\r\n    SOCIAL_PLATFORMS.forEach(platform => {\r\n      const url = app.data.settings[`${EXTENSION_ID}.Social${platform}Url`];\r\n      const icon = app.data.settings[`${EXTENSION_ID}.Social${platform}Icon`];\r\n      if (url || icon) {\r\n        settings.socialLinks.push({\r\n          platform,\r\n          url: url || '',\r\n          icon: icon || ''\r\n        });\r\n      }\r\n    });\r\n    \r\n    // Save migrated data\r\n    this.updateSettings(settings);\r\n  }\r\n\r\n  /**\r\n   * Add some default slides for testing purposes\r\n   */\r\n  addDefaultSlides(): void {\r\n    \r\n    const settings = this.getSettings();\r\n    settings.slides = [\r\n      {\r\n        id: 'slide-default-1',\r\n        image: 'https://via.placeholder.com/800x400/FF6B6B/FFFFFF?text=Advertisement+1',\r\n        link: 'https://example.com/ad1',\r\n        active: true,\r\n        order: 1\r\n      },\r\n      {\r\n        id: 'slide-default-2', \r\n        image: 'https://via.placeholder.com/800x400/4ECDC4/FFFFFF?text=Advertisement+2',\r\n        link: 'https://example.com/ad2',\r\n        active: true,\r\n        order: 2\r\n      }\r\n    ];\r\n    \r\n    this.updateSettings(settings);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Add new slide\r\n   */\r\n  addSlide(): void {\r\n    const settings = this.getSettings();\r\n    const newSlide: SlideData = {\r\n      id: `slide-${Date.now()}`,\r\n      image: '',\r\n      link: '',\r\n      active: true,\r\n      order: settings.slides.length + 1\r\n    };\r\n    \r\n    settings.slides.push(newSlide);\r\n    this.updateSettings(settings);\r\n  }\r\n\r\n  /**\r\n   * Delete slide\r\n   */\r\n  deleteSlide(slideId: string): void {\r\n    const settings = this.getSettings();\r\n    settings.slides = settings.slides.filter(slide => slide.id !== slideId);\r\n    // Reorder remaining slides\r\n    settings.slides.forEach((slide, index) => {\r\n      slide.order = index + 1;\r\n    });\r\n    this.updateSettings(settings);\r\n  }\r\n\r\n  /**\r\n   * Update slide\r\n   */\r\n  updateSlide(slideId: string, field: keyof SlideData, value: any): void {\r\n    const settings = this.getSettings();\r\n    const slide = settings.slides.find(s => s.id === slideId);\r\n    if (slide) {\r\n      (slide as any)[field] = value;\r\n      this.updateSettings(settings);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update social media link\r\n   */\r\n  updateSocialLink(platform: string, field: 'url' | 'icon', value: string): void {\r\n    const settings = this.getSettings();\r\n    let socialLink = settings.socialLinks.find(s => s.platform === platform);\r\n    if (!socialLink) {\r\n      socialLink = { platform, url: '', icon: '' };\r\n      settings.socialLinks.push(socialLink);\r\n    }\r\n    socialLink[field] = value;\r\n    this.updateSettings(settings);\r\n  }\r\n\r\n  /**\r\n   * Update header icon configuration\r\n   */\r\n  updateHeaderIcon(field: 'url' | 'link', value: string): void {\r\n    const settings = this.getSettings();\r\n    if (!settings.headerIcon) {\r\n      settings.headerIcon = { url: '', link: '' };\r\n    }\r\n    settings.headerIcon[field] = value;\r\n    this.updateSettings(settings);\r\n  }\r\n\r\n  content() {\r\n    const settings = this.getSettings(); // Get current settings on each render\r\n    \r\n    return (\r\n      <div className=\"ExtensionPage-settings\">\r\n        <div className=\"container\">\r\n          <div className=\"UnifiedAdminComponent\">\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.GlobalSettings')}</h3>\r\n          \r\n          <label className=\"FormLabel\">\r\n            {app.translator.trans('wusong8899-client1.admin.TransitionTime')}\r\n          </label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"number\"\r\n            min=\"1000\"\r\n            max=\"30000\"\r\n            value={settings.transitionTime}\r\n            oninput={(e: Event) => {\r\n              const newSettings = this.getSettings();\r\n              newSettings.transitionTime = parseInt((e.target as HTMLInputElement).value);\r\n              this.updateSettings(newSettings);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.TagGlideTitle')}</h3>\r\n          \r\n          <label className=\"FormLabel\">\r\n            {app.translator.trans('wusong8899-client1.admin.TagGlideTitleLabel')}\r\n          </label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"text\"\r\n            value={settings.tagGlideTitle || ''}\r\n            placeholder={app.translator.trans('wusong8899-client1.admin.TagGlideTitlePlaceholder')}\r\n            oninput={(e: Event) => {\r\n              const newSettings = this.getSettings();\r\n              newSettings.tagGlideTitle = (e.target as HTMLInputElement).value;\r\n              this.updateSettings(newSettings);\r\n            }}\r\n          />\r\n          <div className=\"helpText\">\r\n            {app.translator.trans('wusong8899-client1.admin.TagGlideTitleHelp')}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.HeaderIconTitle')}</h3>\r\n          \r\n          <label className=\"FormLabel\">\r\n            {app.translator.trans('wusong8899-client1.admin.HeaderIconUrl')}\r\n          </label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            value={settings.headerIcon?.url || ''}\r\n            placeholder={app.translator.trans('wusong8899-client1.admin.HeaderIconUrlHelp')}\r\n            oninput={(e: Event) => {\r\n              this.updateHeaderIcon('url', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n          \r\n          <label className=\"FormLabel\">\r\n            {app.translator.trans('wusong8899-client1.admin.HeaderIconLink')}\r\n          </label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            value={settings.headerIcon?.link || ''}\r\n            placeholder={app.translator.trans('wusong8899-client1.admin.HeaderIconLinkHelp')}\r\n            oninput={(e: Event) => {\r\n              this.updateHeaderIcon('link', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.SlidesManagement')}</h3>\r\n          \r\n          {settings.slides.map((slide) => this.renderSlide(slide))}\r\n          \r\n          <button className=\"Button Button--primary\" onclick={() => this.addSlide()}>\r\n            {app.translator.trans('wusong8899-client1.admin.AddSlide')}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"Form-group\">\r\n          <h3>{app.translator.trans('wusong8899-client1.admin.SocialMediaTitle')}</h3>\r\n          \r\n          {SOCIAL_PLATFORMS.map((platform) => this.renderSocialPlatform(platform))}\r\n        </div>\r\n        \r\n        {/* Submit button handled by ExtensionPage */}\r\n        <div className=\"Form-group\">\r\n          {this.submitButton()}\r\n        </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render slide configuration\r\n   */\r\n  renderSlide(slide: SlideData) {\r\n    return (\r\n      <div className=\"SlideConfig\" key={slide.id}>\r\n        <div className=\"SlideConfig-header\">\r\n          <h4>Slide {slide.order}</h4>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={slide.active}\r\n            onchange={(e: Event) => {\r\n              this.updateSlide(slide.id, 'active', (e.target as HTMLInputElement).checked);\r\n            }}\r\n          />\r\n          <button \r\n            className=\"Button Button--danger\" \r\n            onclick={() => this.deleteSlide(slide.id)}\r\n          >\r\n            {app.translator.trans('wusong8899-client1.admin.DeleteButton')}\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">{app.translator.trans('wusong8899-client1.admin.SlideImageLabel')}</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            value={slide.image}\r\n            oninput={(e: Event) => {\r\n              this.updateSlide(slide.id, 'image', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">{app.translator.trans('wusong8899-client1.admin.SlideLinkLabel')}</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            value={slide.link}\r\n            oninput={(e: Event) => {\r\n              this.updateSlide(slide.id, 'link', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render social platform configuration\r\n   */\r\n  renderSocialPlatform(platform: string) {\r\n    const settings = this.getSettings();\r\n    const socialLink = settings.socialLinks.find(s => s.platform === platform) || \r\n                      { platform, url: '', icon: '' };\r\n\r\n    return (\r\n      <div className=\"SocialPlatformConfig\" key={platform}>\r\n        <h4>{platform}</h4>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">URL</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            placeholder={`https://${platform.toLowerCase()}.com/yourprofile`}\r\n            value={socialLink.url}\r\n            oninput={(e: Event) => {\r\n              this.updateSocialLink(platform, 'url', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"Form-group\">\r\n          <label className=\"FormLabel\">Icon URL</label>\r\n          <input\r\n            className=\"FormControl\"\r\n            type=\"url\"\r\n            placeholder=\"https://example.com/icon.png\"\r\n            value={socialLink.icon}\r\n            oninput={(e: Event) => {\r\n              this.updateSocialLink(platform, 'icon', (e.target as HTMLInputElement).value);\r\n            }}\r\n          />\r\n          \r\n          {socialLink.icon && (\r\n            <div className=\"IconPreview\">\r\n              <img src={socialLink.icon} alt={`${platform} icon`} style=\"max-width: 32px; max-height: 32px;\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize the unified admin interface\r\n */\r\napp.initializers.add(EXTENSION_ID, (): void => {\r\n  const extensionData = app.extensionData.for(EXTENSION_ID);\r\n\r\n  // Register the main JSON settings\r\n  extensionData.registerSetting({\r\n    setting: `${EXTENSION_ID}.settings`,\r\n    type: 'text',\r\n    label: '',\r\n    hidden: true, // This will be handled by our custom component\r\n  });\r\n\r\n  // Register legacy transition time setting for backward compatibility\r\n  extensionData.registerSetting({\r\n    setting: `${EXTENSION_ID}.TransitionTime`,\r\n    type: 'number',\r\n    label: '',\r\n    hidden: true, // This will be handled by our custom component\r\n  });\r\n\r\n  // Register the custom page instead of just a setting component\r\n  extensionData.registerPage(UnifiedAdminComponent);\r\n});"],"names":["EXTENSION_ID","SOCIAL_PLATFORMS","UnifiedAdminComponent","ExtensionPage","vnode","json","parsed","app","error","settings","i","image","link","platform","url","icon","newSlide","slideId","slide","index","field","value","s","socialLink","e","newSettings","extensionData"],"mappings":"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"}